#!/usr/bin/env python3
"""
Standalone Telegram Bot for Airdrop Hunter
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from config import BOT_TOKEN, ADMIN_ID
from database import SessionLocal, User, Airdrop
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def get_main_keyboard():
    """–ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üîç –ù–∞–π—Ç–∏ –∞–∏—Ä–¥—Ä–æ–ø—ã", callback_data="search_airdrops"),
            InlineKeyboardButton(text="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="my_stats")
        ],
        [
            InlineKeyboardButton(text="üèÜ –†–µ–π—Ç–∏–Ω–≥", callback_data="leaderboard"),
            InlineKeyboardButton(text="üí∞ –ó–∞—Ä–∞–±–æ—Ç–æ–∫", callback_data="earnings")
        ],
        [
            InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings"),
            InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")
        ]
    ])
    return keyboard

def get_airdrops_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–∏—Ä–¥—Ä–æ–ø–æ–≤"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üÜï –ù–æ–≤—ã–µ –∞–∏—Ä–¥—Ä–æ–ø—ã", callback_data="new_airdrops"),
            InlineKeyboardButton(text="üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ", callback_data="popular_airdrops")
        ],
        [
            InlineKeyboardButton(text="üí∞ –í—ã—Å–æ–∫–∏–µ –Ω–∞–≥—Ä–∞–¥—ã", callback_data="high_rewards"),
            InlineKeyboardButton(text="‚ö° –ë—ã—Å—Ç—Ä—ã–µ", callback_data="quick_airdrops")
        ],
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="main_menu")
        ]
    ])
    return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.first_name
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    db = SessionLocal()
    try:
        user = db.query(User).filter(User.telegram_id == user_id).first()
        if not user:
            user = User(
                telegram_id=user_id,
                username=username,
                daily_airdrops_count=0,
                last_airdrop_date=None
            )
            db.add(user)
            db.commit()
            welcome_text = f"üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Airdrop Hunter, {username}!\n\n"
        else:
            welcome_text = f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {username}!\n\n"
    finally:
        db.close()
    
    welcome_text += (
        "üöÄ –Ø –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ –∏ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ª—É—á—à–∏—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö –∞–∏—Ä–¥—Ä–æ–ø–∞—Ö!\n\n"
        "üì± –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:\n"
        "‚Ä¢ üîç –ù–∞–π—Ç–∏ –∞–∏—Ä–¥—Ä–æ–ø—ã - –ø–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π\n"
        "‚Ä¢ üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å\n"
        "‚Ä¢ üèÜ –†–µ–π—Ç–∏–Ω–≥ - —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏\n"
        "‚Ä¢ üí∞ –ó–∞—Ä–∞–±–æ—Ç–æ–∫ - –≤–∞—à–∏ –Ω–∞–≥—Ä–∞–¥—ã\n"
        "‚Ä¢ ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è\n"
        "‚Ä¢ ‚ÑπÔ∏è –ü–æ–º–æ—â—å - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"
    )
    
    await message.answer(welcome_text, reply_markup=get_main_keyboard())

@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = (
        "üìö **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:**\n\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "/search - –ù–∞–π—Ç–∏ –∞–∏—Ä–¥—Ä–æ–ø—ã\n"
        "/stats - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
        "/ranking - –†–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        "/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏\n\n"
        "üí° **–°–æ–≤–µ—Ç—ã:**\n"
        "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏\n"
        "‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –Ω–æ–≤—ã–µ –∞–∏—Ä–¥—Ä–æ–ø—ã\n"
        "‚Ä¢ –í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥\n"
        "‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –¥–ª—è –±–æ–Ω—É—Å–æ–≤"
    )
    await message.answer(help_text, parse_mode="Markdown")

@dp.message(Command("search"))
async def cmd_search(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /search"""
    await message.answer(
        "üîç **–ü–æ–∏—Å–∫ –∞–∏—Ä–¥—Ä–æ–ø–æ–≤**\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–∏—Ä–¥—Ä–æ–ø–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞:",
        reply_markup=get_airdrops_keyboard(),
        parse_mode="Markdown"
    )

@dp.message(Command("stats"))
async def cmd_stats(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats"""
    user_id = message.from_user.id
    
    db = SessionLocal()
    try:
        user = db.query(User).filter(User.telegram_id == user_id).first()
        if user:
            stats_text = (
                f"üìä **–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞**\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
                f"üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {user.created_at.strftime('%d.%m.%Y')}\n"
                f"üéØ –ù–∞–π–¥–µ–Ω–Ω—ã—Ö –∞–∏—Ä–¥—Ä–æ–ø–æ–≤: {user.daily_airdrops_count}\n"
                f"üí∞ –û–±—â–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫: $0 (–ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ)\n"
                f"üèÜ –£—Ä–æ–≤–µ–Ω—å: –ù–æ–≤–∏—á–æ–∫\n"
                f"üî• –î–Ω–µ–π –ø–æ–¥—Ä—è–¥: 1"
            )
        else:
            stats_text = "‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
    finally:
        db.close()
    
    await message.answer(stats_text, parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
@dp.callback_query()
async def process_callback(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤"""
    if callback.data == "search_airdrops":
        await callback.message.edit_text(
            "üîç **–ü–æ–∏—Å–∫ –∞–∏—Ä–¥—Ä–æ–ø–æ–≤**\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–∏—Ä–¥—Ä–æ–ø–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞:",
            reply_markup=get_airdrops_keyboard(),
            parse_mode="Markdown"
        )
    
    elif callback.data == "my_stats":
        user_id = callback.from_user.id
        db = SessionLocal()
        try:
            user = db.query(User).filter(User.telegram_id == user_id).first()
            if user:
                stats_text = (
                    f"üìä **–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞**\n\n"
                    f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{callback.from_user.username or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
                    f"üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {user.created_at.strftime('%d.%m.%Y')}\n"
                    f"üéØ –ù–∞–π–¥–µ–Ω–Ω—ã—Ö –∞–∏—Ä–¥—Ä–æ–ø–æ–≤: {user.daily_airdrops_count}\n"
                    f"üí∞ –û–±—â–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫: $0 (–ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ)\n"
                    f"üèÜ –£—Ä–æ–≤–µ–Ω—å: –ù–æ–≤–∏—á–æ–∫\n"
                    f"üî• –î–Ω–µ–π –ø–æ–¥—Ä—è–¥: 1"
                )
            else:
                stats_text = "‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
        finally:
            db.close()
        
        await callback.message.edit_text(stats_text, parse_mode="Markdown")
    
    elif callback.data == "leaderboard":
        await callback.message.edit_text(
            "üèÜ **–†–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π**\n\n"
            "üìä –¢–æ–ø-10 –æ—Ö–æ—Ç–Ω–∏–∫–æ–≤ –∑–∞ –∞–∏—Ä–¥—Ä–æ–ø–∞–º–∏:\n\n"
            "ü•á @user1 - $2,847\n"
            "ü•à @user2 - $1,923\n"
            "ü•â @user3 - $1,456\n"
            "4Ô∏è‚É£ @user4 - $1,234\n"
            "5Ô∏è‚É£ @user5 - $987\n\n"
            "üí° –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å, —á—Ç–æ–±—ã –ø–æ–¥–Ω—è—Ç—å—Å—è –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ!",
            parse_mode="Markdown"
        )
    
    elif callback.data == "earnings":
        await callback.message.edit_text(
            "üí∞ **–í–∞—à –∑–∞—Ä–∞–±–æ—Ç–æ–∫**\n\n"
            "üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
            "‚Ä¢ –û–±—â–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫: $0\n"
            "‚Ä¢ –ó–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü: $0\n"
            "‚Ä¢ –ó–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é: $0\n"
            "‚Ä¢ –°–µ–≥–æ–¥–Ω—è: $0\n\n"
            "üéØ –¶–µ–ª—å: $100\n"
            "üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: 0%\n\n"
            "üí° –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –∞–∏—Ä–¥—Ä–æ–ø–∞—Ö –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞!",
            parse_mode="Markdown"
        )
    
    elif callback.data == "settings":
        await callback.message.edit_text(
            "‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏**\n\n"
            "üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:\n"
            "‚Ä¢ –ù–æ–≤—ã–µ –∞–∏—Ä–¥—Ä–æ–ø—ã: ‚úÖ\n"
            "‚Ä¢ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: ‚úÖ\n"
            "‚Ä¢ –†–µ–π—Ç–∏–Ω–≥: ‚úÖ\n\n"
            "üåç –Ø–∑—ã–∫: –†—É—Å—Å–∫–∏–π\n"
            "üí∞ –í–∞–ª—é—Ç–∞: USD\n"
            "‚è∞ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: UTC+3\n\n"
            "üí° –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞ –Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É—é—Ç—Å—è",
            parse_mode="Markdown"
        )
    
    elif callback.data == "help":
        help_text = (
            "üìö **–°–ø—Ä–∞–≤–∫–∞**\n\n"
            "üîç **–ü–æ–∏—Å–∫ –∞–∏—Ä–¥—Ä–æ–ø–æ–≤:**\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–ù–∞–π—Ç–∏ –∞–∏—Ä–¥—Ä–æ–ø—ã'\n"
            "‚Ä¢ –í—ã–±–∏—Ä–∞–π—Ç–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º\n"
            "‚Ä¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤—ã–º–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è–º–∏\n\n"
            "üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**\n"
            "‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å\n"
            "‚Ä¢ –°–º–æ—Ç—Ä–∏—Ç–µ –∑–∞—Ä–∞–±–æ—Ç–æ–∫\n"
            "‚Ä¢ –°—Ä–∞–≤–Ω–∏–≤–∞–π—Ç–µ —Å –¥—Ä—É–≥–∏–º–∏\n\n"
            "üèÜ **–†–µ–π—Ç–∏–Ω–≥:**\n"
            "‚Ä¢ –°–æ—Ä–µ–≤–Ω—É–π—Ç–µ—Å—å —Å –¥—Ä—É–≥–∏–º–∏\n"
            "‚Ä¢ –ü–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n"
            "‚Ä¢ –î–æ—Å—Ç–∏–≥–∞–π—Ç–µ –Ω–æ–≤—ã—Ö —É—Ä–æ–≤–Ω–µ–π\n\n"
            "üí° **–°–æ–≤–µ—Ç—ã:**\n"
            "‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –Ω–æ–≤—ã–µ –∞–∏—Ä–¥—Ä–æ–ø—ã\n"
            "‚Ä¢ –í—ã–ø–æ–ª–Ω—è–π—Ç–µ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è\n"
            "‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π"
        )
        await callback.message.edit_text(help_text, parse_mode="Markdown")
    
    elif callback.data == "main_menu":
        await callback.message.edit_text(
            "üè† **–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é**\n\n"
            "üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Airdrop Hunter!\n\n"
            "üì± –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:",
            reply_markup=get_main_keyboard(),
            parse_mode="Markdown"
        )
    
    elif callback.data in ["new_airdrops", "popular_airdrops", "high_rewards", "quick_airdrops"]:
        # –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∞–∏—Ä–¥—Ä–æ–ø–æ–≤
        airdrops = [
            {
                "title": "TON Foundation Airdrop",
                "reward": "100-500 TON",
                "difficulty": "–°—Ä–µ–¥–Ω—è—è",
                "end_date": "31.12.2024"
            },
            {
                "title": "Ethereum Layer 2 Airdrop",
                "reward": "50-200 ETH",
                "difficulty": "–õ–µ–≥–∫–∞—è",
                "end_date": "30.11.2024"
            },
            {
                "title": "Solana DeFi Airdrop",
                "reward": "1000-5000 SOL",
                "difficulty": "–°–ª–æ–∂–Ω–∞—è",
                "end_date": "31.10.2024"
            }
        ]
        
        airdrops_text = "üéØ **–ù–∞–π–¥–µ–Ω–Ω—ã–µ –∞–∏—Ä–¥—Ä–æ–ø—ã:**\n\n"
        for i, airdrop in enumerate(airdrops, 1):
            airdrops_text += (
                f"{i}. **{airdrop['title']}**\n"
                f"üí∞ –ù–∞–≥—Ä–∞–¥–∞: {airdrop['reward']}\n"
                f"‚ö° –°–ª–æ–∂–Ω–æ—Å—Ç—å: {airdrop['difficulty']}\n"
                f"üìÖ –î–æ: {airdrop['end_date']}\n\n"
            )
        
        airdrops_text += "üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∞–∏—Ä–¥—Ä–æ–ø –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π"
        
        await callback.message.edit_text(
            airdrops_text,
            parse_mode="Markdown"
        )
    
    await callback.answer()

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ Airdrop Hunter...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    from database import init_db
    init_db()
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    try:
        await dp.start_polling(bot)
    except KeyboardInterrupt:
        logger.info("üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(main()) 